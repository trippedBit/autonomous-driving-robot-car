{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Clean tests build directory",
            "type": "shell",
            "command": "cmake",
            "args": [
                "-E",
                "rm",
                "-rf",
                "${workspaceFolder}/build/CMakeFiles/tests.dir/src",
            ],
            "problemMatcher": [],
            "presentation": {
                "clear": true
            }
        },
        {
            "label": "Build tests",
            "type": "process",
            "command": "cmake",
            "args": [
                "--build",
                "${workspaceFolder}/build",
                "--config",
                "Debug",
                "--target",
                "all",
                "--",
            ],
            "group": "build",
            "problemMatcher": [
                "$gcc",
            ],
            "presentation": {
                "clear": true
            }
        },
        {
            "label": "Run tests",
            "type": "shell",
            "command": "./build/tests.exe",
            "group": "test",
            "dependsOn": "Build tests",
            "problemMatcher": [],
            "presentation": {
                "clear": true
            }
        },
        {
            "label": "Run tests with coverage",
            "type": "shell",
            "options": {
                "cwd": "${workspaceFolder}/build"
            },
            "command": "cmake",
            "args": [
                "--build",
                ".",
                "--target",
                "coverage",
            ],
            "problemMatcher": [],
            "presentation": {
                "clear": true
            }
        },
        {
            "label": "Update coverage report",
            "type": "shell",
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "command": ".venv/Scripts/python",
            "args": [
                "-m",
                "gcovr",
                "--html-details",
                "coverage/coverage.html",
                "--exclude",
                "build",
                "--exclude",
                "tests"
            ],
            "problemMatcher": [],
            "presentation": {
                "clear": true
            }
        },
        {
            "label": "Run tests, update coverage report and show results",
            "type": "shell",
            "command": "start coverage/coverage.html",
            "dependsOrder": "sequence",
            "dependsOn": [
                "Clean tests build directory",
                "Run tests with coverage",
                "Update coverage report"
            ],
            "problemMatcher": [],
            "presentation": {
                "clear": true
            }
        },
        {
            "label": "Compile for ESP32",
            "type": "shell",
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "command": "arduino-cli",
            "args": [
                "compile",
                "--fqbn",
                "esp32:esp32:esp32",
                "--export-binaries"
            ],
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "problemMatcher": [
                "$gcc"
            ],
            "presentation": {
                "clear": true
            }
        },
        {
            "label": "Upload to ESP32",
            "type": "shell",
            "options": {
                "cwd": "${fileDirname}"
            },
            "command": "arduino-cli",
            "args": [
                "upload",
                "-p",
                "COM3",
                "--fqbn",
                "esp32:esp32:esp32"
            ],
            "problemMatcher": [],
            "presentation": {
                "clear": true
            }
        },
        {
            "label": "Compile and Upload for ESP32",
            "type": "shell",
            "command": "echo 'Compiling and uploading to ESP32 executed.'",
            "dependsOrder": "sequence",
            "dependsOn": [
                "Compile for ESP32",
                "Upload to ESP32"
            ],
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "problemMatcher": [
                "$gcc"
            ],
            "presentation": {
                "clear": true
            }
        },
    ]
}